#define Employee struct emp
FILE * del(FILE * fp);

struct pass
{
	char pass[25];
}pa;

struct emp
{
    char name[100];
    char dept[50];
    int employee_Id;
    
};
int main()
{
    int ch,id,k,i;
    char c,pas[50];
    
    FILE * fp;
    Employee s;
    int option;
    char another;

    if((fp=fopen("db.txt","rb+"))==NULL)
    {
        if((fp=fopen("db.txt","wb+"))==NULL)
        {
            printf("Can't create or open Database.");
            return 0;
        }
FILE * del(FILE * fp)
{
    title();

    Student s;
    int flag=0,tempid,siz=sizeof(s);
    FILE *ft;

    if((ft=fopen("temp.txt","wb+"))==NULL)
    {
        printf("\n\n\t\t\t\\t!!! ERROR !!!\n\t\t");
        system("pause");
        return fp;
    }

    printf("\n\n\tEnter Id of Employee to Delete the Record");
    printf("\n\n\t\t\tEmployee Id. : ");
    scanf("%d",&tempid);


    rewind(fp);


    while((fread(&s,siz,1,fp))==1)
    {
        if(s.employee_Id==tempid)
        {
            flag=1;
            printf("\n\tRecord Deleted for");
            printf("\n\n\t\t%s\n\n\t\t%s\n\n\t\t%d\n\t",s.name,s.dept,s.employee_Id);
            continue;
        }

        fwrite(&s,siz,1,ft);
    }


    fclose(fp);
    fclose(ft);

    remove("db.txt");
    rename("temp.txt","db.txt");

    if((fp=fopen("db.txt","rb+"))==NULL)
    {
        printf("ERROR");
        return  NULL;
    }

    if(flag==0) printf("\n\n\t\tNO Employee FOUND WITH THE INFORMATION\n\t");

    printChar('-',65);
    printf("\n\t");
    system("pause");
    return fp;
}
